"""
Page de politique de s√©curit√© - S√©curit√© 360
Gestion de la politique de s√©curit√© de l'information
"""

import streamlit as st
from utils.helpers import display_page_header, format_date
from utils.config import COLORS
from datetime import datetime

def show(auth, db):
    """Affiche la page de politique de s√©curit√©"""
    
    # En-t√™te
    display_page_header(
        "Politique de s√©curit√©",
        "Gestion de la politique de s√©curit√© de l'information"
    )
    
    # R√©cup√©rer les documents de politique
    documents = db.get_documents_by_category('Politique')
    
    # Tabs pour organiser le contenu
    tab1, tab2, tab3 = st.tabs(["üìÑ Document actuel", "üìö Historique", "‚ûï Nouvelle version"])
    
    with tab1:
        if documents:
            doc_actuel = documents[0]  # Document le plus r√©cent
            
            st.markdown(f"""
            <div style="background-color: {COLORS['surface']}; padding: 1.5rem; border-radius: 12px; margin-bottom: 1rem;">
                <h3 style="color: {COLORS['text']}; margin-top: 0;">{doc_actuel['titre']}</h3>
                <p style="color: {COLORS['text_secondary']}; margin: 0.5rem 0;">
                    <strong>Version:</strong> {doc_actuel['version']} |
                    <strong>Auteur:</strong> {doc_actuel['auteur']} |
                    <strong>Date:</strong> {format_date(doc_actuel['date_creation'])}
                </p>
            </div>
            """, unsafe_allow_html=True)
            
            # Contenu du document
            if doc_actuel.get('contenu'):
                st.markdown(f"""
                <div style="background-color: {COLORS['background']}; padding: 2rem; border-radius: 8px; border-left: 4px solid {COLORS['accent']};">
                    <div style="color: {COLORS['text']}; line-height: 1.8;">
                        {doc_actuel['contenu'].replace(chr(10), '<br>')}
                    </div>
                </div>
                """, unsafe_allow_html=True)
            
            # Actions (si permissions)
            if auth.has_role("Admin"):
                st.markdown("<br>", unsafe_allow_html=True)
                col1, col2 = st.columns([1, 1])
                
                with col1:
                    if st.button("‚úèÔ∏è Modifier", use_container_width=True):
                        st.session_state['edit_politique'] = True
                        st.rerun()
                
                with col2:
                    # Bouton d'export PDF (placeholder)
                    st.download_button(
                        label="üì• Exporter en PDF",
                        data="Contenu PDF √† impl√©menter",
                        file_name=f"politique_securite_v{doc_actuel['version']}.pdf",
                        mime="application/pdf",
                        use_container_width=True
                    )
        else:
            st.info("Aucune politique de s√©curit√© n'a √©t√© cr√©√©e. Utilisez l'onglet 'Nouvelle version' pour en cr√©er une.")
    
    with tab2:
        st.markdown("### üìö Historique des versions")
        
        if documents:
            for idx, doc in enumerate(documents):
                with st.expander(f"Version {doc['version']} - {format_date(doc['date_creation'])}"):
                    st.markdown(f"**Auteur:** {doc['auteur']}")
                    st.markdown(f"**Derni√®re modification:** {format_date(doc['derniere_modification'])}")
                    st.markdown("---")
                    st.markdown(doc.get('contenu', 'Aucun contenu'))
        else:
            st.info("Aucun historique disponible")
    
    with tab3:
        if auth.has_role("Admin"):
            st.markdown("### ‚ûï Cr√©er une nouvelle version")
            
            user = auth.get_current_user()
            
            with st.form("nouvelle_politique"):
                titre = st.text_input(
                    "Titre du document",
                    value="Politique de s√©curit√© de l'information"
                )
                
                version = st.text_input(
                    "Num√©ro de version",
                    value="1.0",
                    placeholder="Ex: 1.0, 2.0, 2.1..."
                )
                
                contenu = st.text_area(
                    "Contenu de la politique",
                    height=400,
                    value="""1. INTRODUCTION

La pr√©sente politique de s√©curit√© de l'information d√©finit les principes et les r√®gles que [Nom de l'organisation] s'engage √† respecter pour prot√©ger ses informations et ses actifs informationnels.

2. OBJECTIFS

Les objectifs de cette politique sont de :
- Prot√©ger la confidentialit√©, l'int√©grit√© et la disponibilit√© des informations
- √âtablir un cadre de gestion de la s√©curit√© de l'information
- D√©finir les responsabilit√©s en mati√®re de s√©curit√©
- Assurer la conformit√© aux exigences l√©gales et r√©glementaires

3. CHAMP D'APPLICATION

Cette politique s'applique √† :
- Tous les employ√©s, sous-traitants et partenaires
- Tous les syst√®mes d'information et actifs de l'organisation
- Toutes les informations, quel que soit leur support

4. PRINCIPES DIRECTEURS

4.1 Confidentialit√©
Les informations doivent √™tre accessibles uniquement aux personnes autoris√©es.

4.2 Int√©grit√©
Les informations doivent √™tre exactes, compl√®tes et prot√©g√©es contre toute modification non autoris√©e.

4.3 Disponibilit√©
Les informations doivent √™tre accessibles aux utilisateurs autoris√©s quand ils en ont besoin.

5. RESPONSABILIT√âS

5.1 Direction
La direction est responsable de l'approbation et du soutien de cette politique.

5.2 Responsable de la s√©curit√© de l'information (RSSI)
Le RSSI est responsable de la mise en ≈ìuvre et du suivi de cette politique.

5.3 Employ√©s
Tous les employ√©s sont responsables de respecter cette politique et les proc√©dures associ√©es.

6. GESTION DES RISQUES

L'organisation s'engage √† :
- Identifier et √©valuer r√©guli√®rement les risques de s√©curit√©
- Mettre en place des mesures de traitement appropri√©es
- Surveiller et r√©viser les risques de mani√®re continue

7. CONTR√îLE D'ACC√àS

- Les acc√®s aux syst√®mes doivent √™tre accord√©s selon le principe du moindre privil√®ge
- Les mots de passe doivent respecter les exigences de complexit√©
- Les acc√®s doivent √™tre r√©voqu√©s imm√©diatement en cas de d√©part

8. S√âCURIT√â PHYSIQUE

- Les locaux doivent √™tre prot√©g√©s contre les acc√®s non autoris√©s
- Les √©quipements critiques doivent √™tre s√©curis√©s
- Une politique de bureau propre doit √™tre appliqu√©e

9. INCIDENTS DE S√âCURIT√â

- Tout incident de s√©curit√© doit √™tre signal√© imm√©diatement
- Une proc√©dure de gestion des incidents est en place
- Des analyses post-incident doivent √™tre r√©alis√©es

10. CONTINUIT√â D'ACTIVIT√â

- Des plans de continuit√© et de reprise d'activit√© sont √©tablis
- Des tests r√©guliers doivent √™tre effectu√©s
- Les sauvegardes doivent √™tre r√©alis√©es conform√©ment aux proc√©dures

11. CONFORMIT√â

- Cette politique doit √™tre respect√©e par tous
- Des audits r√©guliers seront r√©alis√©s
- Les violations peuvent entra√Æner des sanctions disciplinaires

12. R√âVISION

Cette politique sera r√©vis√©e au minimum une fois par an ou en cas de changement significatif.

Approuv√© par : [Direction]
Date : [Date d'approbation]"""
                )
                
                fichier_joint = st.file_uploader(
                    "Fichier joint (optionnel)",
                    type=['pdf', 'docx'],
                    help="Vous pouvez joindre une version PDF ou Word du document"
                )
                
                col1, col2 = st.columns(2)
                with col1:
                    submit = st.form_submit_button("üíæ Enregistrer", use_container_width=True, type="primary")
                with col2:
                    cancel = st.form_submit_button("‚ùå Annuler", use_container_width=True)
                
                if submit:
                    if titre and version and contenu:
                        fichier_path = None
                        if fichier_joint:
                            fichier_path = f"documents/{fichier_joint.name}"
                        
                        db.add_document(
                            titre=titre,
                            categorie='Politique',
                            version=version,
                            contenu=contenu,
                            auteur=user['username'],
                            fichier_path=fichier_path
                        )
                        
                        st.success("‚úÖ Politique enregistr√©e avec succ√®s!")
                        st.rerun()
                    else:
                        st.error("Veuillez remplir tous les champs obligatoires")
        else:
            st.warning("üö´ Vous devez avoir les droits d'administrateur pour cr√©er une nouvelle politique")
    
    # Section d'aide
    with st.expander("‚ÑπÔ∏è Aide et recommandations"):
        st.markdown(f"""
        <div style="background-color: {COLORS['surface']}; padding: 1.5rem; border-radius: 8px; color: {COLORS['text']};">
            <h4 style="color: {COLORS['accent']}; margin-top: 0;">Bonnes pratiques pour la politique de s√©curit√© :</h4>
            <ul style="line-height: 1.8;">
                <li>La politique doit √™tre claire, concise et compr√©hensible par tous</li>
                <li>Elle doit √™tre approuv√©e par la direction g√©n√©rale</li>
                <li>Elle doit √™tre communiqu√©e √† tout le personnel</li>
                <li>Elle doit √™tre revue au moins une fois par an</li>
                <li>Elle doit √™tre align√©e avec les objectifs business</li>
            </ul>
        </div>
        """, unsafe_allow_html=True)
                